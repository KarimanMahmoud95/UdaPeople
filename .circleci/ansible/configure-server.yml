---
- name: "configuration play." 
  hosts: web
  user: ubuntu
  become: true 
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_host_key_checking: false
    ansible_stdout_callback: yaml

  pre_tasks:
    - name: "wait 600 seconds for target connection to become reachable/usable."
      wait_for_connection:
        timeout: 600

    - name: "install python for Ansible."
      become: true
      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
      changed_when: false

    - setup:  

    # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}" 
    TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    TYPEORM_PORT: "5432"
    TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}" 

#   roles:
#     - configure-server
#     - configure-prometheus-node-exporter

# [Unit]
# Description=Prometheus
# Wants=network-online.target
# After=network-online.target

# [Service]
# User=prometheus
# Group=prometheus
# Type=simple
# ExecStart=/usr/local/bin/prometheus \
#     --config.file /etc/prometheus/prometheus.yml \
#     --storage.tsdb.path /var/lib/prometheus/ \
#     --web.console.templates=/etc/prometheus/consoles \
#     --web.console.libraries=/etc/prometheus/console_libraries
    
# [Install]
# WantedBy=mutli-user.target    